/*------------绘制余弦曲线和直线-----------------*/
/*图形叠加的关键时在分别计算出同一行两个图形的列方向
点坐标后，正确判断相互的位置关系。为此，可以先判断图
形的交点，再分别控制打印两个不同的图形。将屏幕的行方
向定义为x，列方向定义为y，定义图形的总宽度为62列，21
行。给出在y轴上的坐标，分别利用反余弦函数计算相应的x
轴坐标m和直线的x轴坐标n，在x轴的输出列中，取值为0到
62，若x值和m以及n相等，输出#，如果和n相等则输出#，如
果和m相等或者和62-m相等，则输出*。*/ 
#include<stdio.h>
#include<math.h>
int main()
{
	/*表示列方向变化的量yy，共表示21行，取值为0-20。
	设置变量（x,y）表示输出点的坐标。设置变量m和n表
	示当y值确定的时候，直线和余弦函数的x取值。*/ 
	double y;
	int x,m,n,yy;
	/*外循环：循环变量为yy，表示共输出21行，取值为0-20.
	对于每一行确定改行的列坐标y，计算直线的x和余弦函数
	的x值，然后利用内循环在输出的62列中进行判断输出符号。*/ 
	for(yy=0;yy<=20;yy++){
		y=0.1*yy;
		m=acos(1-y)*10;
		n=45*(y-1)+31;
		/*内循环：循环变量为x，表示每一列的x取值，当x值
		和余弦值相同，同时有和直线的n值相同，那么输出#；
		当x值和余弦值相同，输出*；当x值和直线值相同，输
		出#。*/ 
		for(x=0;x<=62;x++)			//屏幕行方向坐标 
			if(x==m&&x==n)			//直线与cos（x）相交时打印# 
				printf("#");
			else if(x==n)			//打印不相交时的直线图形 
				printf("#");
			else if(x==m||x==62-m)	//打印不相交时的cos（x）图形 
				printf("*");
			else printf(" ");		//其他情况打印空格 
			printf("\n");
	}
} 
